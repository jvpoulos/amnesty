ggplot(ipums.50, aes(x = value,fill=Census)) +
geom_density(aes(y=..count../sum(..count..))) +
xlim(c(1,30000)) +
ylab("Proportion") +
xlab("Value of real property owned") +
geom_vline(xintercept = 20000, colour="red", linetype = "longdash")
ggplot(wealth.dens.plot, aes(x = value,fill=Census)) +
geom_density(aes(y=..count../sum(..count..))) +
xlim(c(1,30000)) +
ylab("Proportion") +
xlab("Value of real property owned") +
geom_vline(xintercept = 20000, colour="red", linetype = "longdash"
)
ggplot(wealth.dens.plot, aes(x = value,fill=Census)) +
geom_density(alpha=.3) +
xlim(c(1,30000)) +
ylab("Proportion") +
xlab("Value of real property owned") +
geom_vline(xintercept = 20000, colour="red", linetype = "longdash")
ggplot(wealth.dens.plot, aes(x = value,fill=Census)) +
geom_density(alpha=0.3,aes(y=..count../sum(..count..))) +
xlim(c(1,30000)) +
ylab("Proportion") +
xlab("Value of real property owned") +
geom_vline(xintercept = 20000, colour="red", linetype = "longdash")
?count
wealth.dens.plot <- melt(data=data.frame("Census"=c(rep("1850 100%",nrow(ipums.50)),
rep("1860 1%",nrow(ipums.60))),
"realprop"= c(ipums.50$realprop,
ipums.60$realprop)),
id.vars="Census")
# Make density plot for real property
wealth.dens <- ggplot(ipums.50, aes(x = value,fill=Census)) +
geom_density(alpha=.3) +
xlim(c(1,30000)) +
ylab("Proportion") +
xlab("Value of real property owned") +
geom_vline(xintercept = 20000, colour="red", linetype = "longdash")
wealth.dens
wealth.dens.plot <- melt(data=data.frame("Census"=c(rep("1850 100%",nrow(ipums.50)),
rep("1860 1%",nrow(ipums.60))),
"realprop"= c(ipums.50$realprop,
ipums.60$realprop)),
id.vars="Census")
# Make density plot for real property
wealth.dens <- ggplot(wealth.dens.plot, aes(x = value, fill=Census)) +
geom_density(alpha=.3) +
xlim(c(1,30000)) +
ylab("Proportion") +
xlab("Value of real property owned") +
geom_vline(xintercept = 20000, colour="red", linetype = "longdash")
ggplot(wealth.dens.plot, aes(x = value, fill=Census)) +
geom_density(alpha=.3) +
xlim(c(1,30000)) +
ylab("Proportion") +
xlab("Value of real property owned") +
geom_vline(xintercept = 20000, colour="red", linetype = "longdash")
wealth.dens <- ggplot(wealth.dens.plot, aes(x = value, fill=Census)) +
geom_density(alpha=.3) +
xlim(c(1,30000)) +
ylab("Density") +
xlab("Value of real property owned") +
geom_vline(xintercept = 20000, colour="red", linetype = "longdash")
ggsave(paste0(data.directory,"wealth-dens.png"), wealth.dens, width=11, height=8.5)
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
# Subset to individuals with nonzero and nonmissing real property
ipums.50.1 <- subset(ipums.50.1, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums.50.1$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums.50.1$namelast)))
# Trim spaces
ipums.50.1$surname <- gsub(" ","",ipums.50.1$surname)
# Create variable for length of surname
ipums.50.1$surname.length <- nchar(ipums.50.1$surname)
# Drop obs with missing surnames
ipums.50.1 <- subset(ipums.50.1, ipums.50.1$surname.length>2)
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
head(impums.50.1)
head(ipums.50.1)
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",", quote = "",
row.names = NULL,
stringsAsFactors = FALSE)
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",", quote = "",
stringsAsFactors = FALSE)
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",", quote = "")
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",", quote="")
# Import 1% sample
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
# Subset to individuals with nonzero and nonmissing real property
ipums.50.1 <- subset(ipums.50.1, realprop>0)
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
summary(ipums.50.1$realprop)
View(ipums.50.1)
ipums.50.1$realprop
slave.60 <- read.csv(paste0(data.directory,"ipums-1860-slave.csv"),header=TRUE, sep = ",")
View(slave.60)
View(ipums.60)
colnames(slave.60)
ddply(slave.60,~serial,summarise,n.slaves=length(serial))
View(slave.60)
slave.60 <- ddply(slave.60,~serial,summarise,n.slaves= n())
count(slave.60, serial)
count(slave.60, slave.60$serial)
slave.60 <- ddply(slave.60,~serial,summarise,n.slaves=length(serial))
slave.60 <- ddply(slave.60,~serial,summarise,n.slaves=nrow())
slave.60 <- ddply(slave.60,~serial,summarise,n.slaves=nrow(serial))
slave.60 <- ddply(slave.60,~serial,summarise,n.slaves=length(serial))
View(slave.60)
?merge
ipums.60.1 <- merge(ipums.60.1,slave.60,by="serial", all.x=TRUE)
rm(ipums.60)
Set data directory
data.directory <- "~/Dropbox/github/amnesty/data/"
# Import Census data
ipums.60.1 <- read.csv(paste0(data.directory,"ipums-1860-sample.csv"),header=TRUE, sep = ",")
# Subset to individuals with nonzero and nonmissing real property
ipums.60.1 <- subset(ipums.60.1, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums.60.1$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums.60.1$namelast)))
# Trim spaces
ipums.60.1$surname <- gsub(" ","",ipums.60.1$surname)
# Create variable for length of surname
ipums.60.1$surname.length <- nchar(ipums.60.1$surname)
# Drop obs with missing surnames
ipums.60.1 <- subset(ipums.60.1, ipums.60.1$surname.length>2)
# Count # slaves by serial
slave.60 <- ddply(slave.60,~serial,summarise,n.slaves=length(serial))
# Merge slave file
ipums.60.1 <- merge(ipums.60.1,slave.60,by="serial", all.x=TRUE)
View(slave.60)
## 1860 Census 1% sample.
library(ggplot2)
library(xtable)
# Set data directory
data.directory <- "~/Dropbox/github/amnesty/data/"
# Import Census data
ipums.60.1 <- read.csv(paste0(data.directory,"ipums-1860-sample.csv"),header=TRUE, sep = ",")
# Subset to individuals with nonzero and nonmissing real property
ipums.60.1 <- subset(ipums.60.1, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums.60.1$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums.60.1$namelast)))
# Trim spaces
ipums.60.1$surname <- gsub(" ","",ipums.60.1$surname)
# Create variable for length of surname
ipums.60.1$surname.length <- nchar(ipums.60.1$surname)
# Drop obs with missing surnames
ipums.60.1 <- subset(ipums.60.1, ipums.60.1$surname.length>2)
# Import slave file
slave.60 <- read.csv(paste0(data.directory,"ipums-1860-slave.csv"),header=TRUE, sep = ",")
# Count # slaves by serial
slave.60 <- ddply(slave.60,~serial,summarise,n.slaves=length(serial))
# Merge slave file
ipums.60.1 <- merge(ipums.60.1,slave.60,by="serial", all.x=TRUE)
head(ipums.60.1)
summary(ipums.60.1$n.slaves)
ipums.60.1$n.slaves[is.na(ipums.60.1$n.slaves),] <- 0
ipums.60.1$n.slaves[is.na(ipums.60.1$n.slaves)] <- 0
summary(ipums.60.1$n.slaves)
ipums.60.1$slaveholder <- ifelse(ipums.60.1$n.slaves>0,1,0)
summary(ipums.60.1$slaveholder)
## 1850 complete--count Census.
# Set data directory
data.directory <- "~/Dropbox/github/amnesty/data/"
# # Import Census data
# ipums <- read.csv(paste0(data.directory,"ipums-1850-all.csv"),header=TRUE, sep = ",")
#
# # Change column names to lowercase
# names(ipums) <- tolower(names(ipums))
#
# # Subset to males aged 21 and over who live in south and have nonzero and nonmissing real property
# fip.south <- c(1,5,12,13,22,28,37,45,47,48,51) # 11 southern states
#
# ipums.50 <- subset(ipums,
#                   sex==1 &
#                   statefip %in% icp.south &
#                   (realprop>0 & realprop!=99999999) & # 99999999 is NIU
#                   (age>=21 & age!= 999))
#
# # Remove non-alphabetic characters from surname and make all uppercase
# ipums.50$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums.50$namelast)))
#
# # Trim spaces
# ipums.50$surname <- gsub(" ","",ipums.50$surname)
#
# # Create variable for length of surname
# ipums.50$surname.length <- nchar(ipums.50$surname)
#
# # Drop obs with missing surnames
# ipums.50 <- subset(ipums.50, ipums.50$surname.length>2)
#
# write.csv(ipums.50, file = "ipums-1850-sample.csv", row.names = TRUE)
# Import 100% sample
ipums.50 <- read.csv(paste0(data.directory,"ipums-1850-sample.csv"),header=TRUE, sep = ",")
# Import 1% sample
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
CleanIpums1 <- function(ipums) {
# Clean 1% sample
# Subset to individuals with nonzero and nonmissing real property
ipums <- subset(ipums, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums$namelast)))
# Trim spaces
ipums$surname <- gsub(" ","",ipums$surname)
# Create variable for length of surname
ipums$surname.length <- nchar(ipums$surname)
# Drop obs with missing surnames
ipums <- subset(ipums, ipums$surname.length>2)
}
ipums.50.1 <- CleanIpums1(ipums.50.1)
# Merge slave file to 1% sample
slave.50 <- read.csv(paste0(data.directory,"ipums-1850-slave-linked.csv"),header=TRUE, sep = ",")
summary(ipums.50)
# Import 1% sample
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
ipums.60.1 <- read.csv(paste0(data.directory,"ipums-1860-sample.csv"),header=TRUE, sep = ",")
slave.50 <- read.csv(paste0(data.directory,"ipums-1850-slave-flat.csv"),header=TRUE, sep = ",")
View(slave.50)
# Count # slaves by serial
slave.50 <- ddply(slave.50,~serial,summarise,n.slaves=length(serial))
View(slave.50)
summary(ipums.50$serial)
summary(slave.50$serial)
head(slave.50)
View(slave.50)
slave.50 <- read.csv(paste0(data.directory,"ipums-1850-slave-link.csv"),header=TRUE, sep = ",")
slave.50 <- read.csv(paste0(data.directory,"ipums-1850-slave-linked.csv"),header=TRUE, sep = ",")
summary(slave.50$serial)
View(slave.50)
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
ipums.1850.1 <- read.delim("~/Dropbox/github/amnesty/data/ipums-1850-1.csv", quote="")
View(ipums.1850.1)
ipums.1850.1 <- read.csv("~/Dropbox/github/amnesty/data/ipums-1850-1.csv")
View(ipums.1850.1)
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
ipums.50.1 <- read.table(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
ipums.50.1 <- read.table(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",",quote="")
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
ipums.1850.1 <- read.csv("~/Dropbox/github/amnesty/data/ipums-1850-1.csv", stringsAsFactors=FALSE)
View(ipums.1850.1)
library(foreign)
ipums.50.1 <- read.dta("ipums-1850-1.dta")
View(ipums.1850.1)
ipums.50 <- read.csv(paste0(data.directory,"ipums-1850-sample.csv"),header=TRUE, sep = ",")
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
Sys.setlocale("LC_ALL", "English")
ipums.50.1 <- read.csv(paste0(data.directory,"ipums-1850-1.csv"),header=TRUE, sep = ",")
ipums.1850.1 <- read.delim("~/Dropbox/github/amnesty/data/ipums-1850-1.csv", quote="")
View(ipums.1850.1)
summary(ipums.1850.1$realprop)
CleanIpums1 <- function(ipums) {
# Clean 1% sample
# Subset to individuals with nonzero and nonmissing real property
ipums <- subset(ipums, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums$namelast)))
# Trim spaces
ipums$surname <- gsub(" ","",ipums$surname)
# Create variable for length of surname
ipums$surname.length <- nchar(ipums$surname)
# Drop obs with missing surnames
ipums <- subset(ipums, ipums$surname.length>2)
}
ipums.50.1 <- CleanIpums1(ipums.50.1)
CleanIpums1 <- function(ipums) {
# Clean 1% sample
# Subset to individuals with nonzero and nonmissing real property
ipums <- subset(ipums, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums$namelast)))
# Trim spaces
ipums$surname <- gsub(" ","",ipums$surname)
# Create variable for length of surname
ipums$surname.length <- nchar(ipums$surname)
# Drop obs with missing surnames
ipums <- subset(ipums, ipums$surname.length>2)
}
ipums.50.1 <- CleanIpums1(ipums.50.1)
ipums.1850.1 <- read.delim(paste0(data.directory,"ipums-1850-1.csv"), quote="")
View(ipums.1850.1)
CleanIpums1 <- function(ipums) {
# Clean 1% sample
# Subset to individuals with nonzero and nonmissing real property
ipums <- subset(ipums, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums$namelast)))
# Trim spaces
ipums$surname <- gsub(" ","",ipums$surname)
# Create variable for length of surname
ipums$surname.length <- nchar(ipums$surname)
# Drop obs with missing surnames
ipums <- subset(ipums, ipums$surname.length>2)
}
ipums.50.1 <- CleanIpums1(ipums.50.1)
ipums.1850.1$realprop
class(ipums.1850.1$realprop)
CleanIpums1(ipums.50.1)
subset(ipums.1850.1, realprop>0)
CleanIpums1 <- function(ipums) {
# Clean 1% sample
# Subset to individuals with nonzero and nonmissing real property
ipums <- subset(ipums, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums$namelast)))
# Trim spaces
ipums$surname <- gsub(" ","",ipums$surname)
# Create variable for length of surname
ipums$surname.length <- nchar(ipums$surname)
# Drop obs with missing surnames
ipums <- subset(ipums, ipums$surname.length>2)
}
ipums.50.1 <- CleanIpums1(ipums.1850.1)
slave.50 <- read.csv(paste0(data.directory,"ipums-1850-slave-linked.csv"),header=TRUE, sep = ",")
View(slave.50)
summary(slave.50$slave)
class(slave.50$slave)
sumamry(slave.50.slave)
summary(slave.50.slave)
summary(slave.50$slave)
slave.50$lave==0
slave.50$lave=0
View(slave.50)
View(slave.50)
slave.50 <- ddply(slave.50,~serial,summarise,n.slaves=sum(slave))
slave.50 <- ddply(slave.50,~serial,summarise,n.slaves=count(slave))
slave.50$is.slave <- ifelse(slave.50slave=="Slave",1,0)
slave.50$is.slave <- ifelse(slave.50$slave=="Slave",1,0)
View(slave.50)
slave.50 <- ddply(slave.50,~serial,summarise,n.slaves=sum(slave))
slave.50 <- ddply(slave.50,~serial,summarise,n.slaves=sum(is.slave))
View(slave.50)
ipums.50.1 <- merge(ipums.50.1,slave.50,by="serial", all.x=TRUE)
ipums.50.1$n.slaves[is.na(ipums.50.1$n.slaves)] <- 0
ipums.50.1$slaveholder <- ifelse(ipums.50.1$n.slaves>0,1,0)
head(ipums.50.1)
## 1850 complete--count Census.
# Set data directory
data.directory <- "~/Dropbox/github/amnesty/data/"
# # Import Census data
# ipums.50 <- read.csv(paste0(data.directory,"ipums-1850-all.csv"),header=TRUE, sep = ",")
#
# # Change column names to lowercase
# names(ipums.50) <- tolower(names(ipums.50))
#
# # Subset to males aged 21 and over who live in south and have nonzero and nonmissing real property
# fip.south <- c(1,5,12,13,22,28,37,45,47,48,51) # 11 southern states
#
# ipums.50 <- subset(ipums,
#                   sex==1 &
#                   statefip %in% icp.south &
#                   (realprop>0 & realprop!=99999999) & # 99999999 is NIU
#                   (age>=21 & age!= 999))
#
# # Remove non-alphabetic characters from surname and make all uppercase
# ipums.50$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums.50$namelast)))
#
# # Trim spaces
# ipums.50$surname <- gsub(" ","",ipums.50$surname)
#
# # Create variable for length of surname
# ipums.50$surname.length <- nchar(ipums.50$surname)
#
# # Drop obs with missing surnames
# ipums.50 <- subset(ipums.50, ipums.50$surname.length>2)
#
# write.csv(ipums.50, file = "ipums-1850-sample.csv", row.names = TRUE)
# Import 100% sample
ipums.50 <- read.csv(paste0(data.directory,"ipums-1850-sample.csv"),header=TRUE, sep = ",")
# Import 1% sample
ipums.1850.1 <- read.delim(paste0(data.directory,"ipums-1850-1.csv"), quote="")
CleanIpums1 <- function(ipums) {
# Clean 1% sample
# Subset to individuals with nonzero and nonmissing real property
ipums <- subset(ipums, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums$namelast)))
# Trim spaces
ipums$surname <- gsub(" ","",ipums$surname)
# Create variable for length of surname
ipums$surname.length <- nchar(ipums$surname)
# Drop obs with missing surnames
ipums <- subset(ipums, ipums$surname.length>2)
}
ipums.50.1 <- CleanIpums1(ipums.1850.1)
## Load 185
# Set data directory
data.directory <- "~/Dropbox/github/amnesty/data/"
# # Import Census data
# ipums.50 <- read.csv(paste0(data.directory,"ipums-1850-all.csv"),header=TRUE, sep = ",")
#
# # Change column names to lowercase
# names(ipums.50) <- tolower(names(ipums.50))
#
# # Subset to males aged 21 and over who live in south and have nonzero and nonmissing real property
# fip.south <- c(1,5,12,13,22,28,37,45,47,48,51) # 11 southern states
#
# ipums.50 <- subset(ipums,
#                   sex==1 &
#                   statefip %in% icp.south &
#                   (realprop>0 & realprop!=99999999) & # 99999999 is NIU
#                   (age>=21 & age!= 999))
#
# # Remove non-alphabetic characters from surname and make all uppercase
# ipums.50$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums.50$namelast)))
#
# # Trim spaces
# ipums.50$surname <- gsub(" ","",ipums.50$surname)
#
# # Create variable for length of surname
# ipums.50$surname.length <- nchar(ipums.50$surname)
#
# # Drop obs with missing surnames
# ipums.50 <- subset(ipums.50, ipums.50$surname.length>2)
#
# write.csv(ipums.50, file = "ipums-1850-sample.csv", row.names = TRUE)
# Import 100% sample
ipums.50 <- read.csv(paste0(data.directory,"ipums-1850-sample.csv"),header=TRUE, sep = ",")
# Import 1% sample
ipums.1850.1 <- read.delim(paste0(data.directory,"ipums-1850-1.csv"), quote="")
CleanIpums1 <- function(ipums) {
# Clean 1% sample
# Subset to individuals with nonzero and nonmissing real property
ipums <- subset(ipums, realprop>0)
# Remove non-alphabetic characters from surname and make all uppercase
ipums$surname<- trimws(toupper(gsub("[^[:alnum:] ]", "",ipums$namelast)))
# Trim spaces
ipums$surname <- gsub(" ","",ipums$surname)
# Create variable for length of surname
ipums$surname.length <- nchar(ipums$surname)
# Drop obs with missing surnames
ipums <- subset(ipums, ipums$surname.length>2)
}
ipums.50.1 <- CleanIpums1(ipums.1850.1)
# Import slave file
slave.50 <- read.csv(paste0(data.directory,"ipums-1850-slave-linked.csv"),header=TRUE, sep = ",")
# Count # slaves by serial
slave.50$is.slave <- ifelse(slave.50$slave=="Slave",1,0)
slave.50 <- ddply(slave.50,~serial,summarise,n.slaves=sum(is.slave))
# Merge slave file
ipums.50.1 <- merge(ipums.50.1,slave.50,by="serial", all.x=TRUE)
ipums.50.1$n.slaves[is.na(ipums.50.1$n.slaves)] <- 0
ipums.50.1$slaveholder <- ifelse(ipums.50.1$n.slaves>0,1,0)
## Merge 1860 Census 1% sample with slave schedule.
# Import Census data
ipums.60.1 <- read.csv(paste0(data.directory,"ipums-1860-sample.csv"),header=TRUE, sep = ",")
# Clean
ipums.60.1 <- CleanIpums1(ipums.60.1)
# Import slave file
slave.60 <- read.csv(paste0(data.directory,"ipums-1860-slave-aux.csv"),header=TRUE, sep = ",")
# Count # slaves by serial
slave.60 <- ddply(slave.60,~serial,summarise,n.slaves=length(serial))
# Merge slave file
ipums.60.1 <- merge(ipums.60.1,slave.60,by="serial", all.x=TRUE)
ipums.60.1$n.slaves[is.na(ipums.60.1$n.slaves)] <- 0
ipums.60.1$slaveholder <- ifelse(ipums.60.1$n.slaves>0,1,0)
?dummify
count(ipums.1850$occ)
count(ipums.50$occ)
rm(ipums.1850.1)
ipums.50 <- cbind(ipums.50,dummify(as.factor(ipums.50$OCC)))
ipums.50.1 <- cbind(ipums.50.1,dummify(as.factor(ipums.50.2$OCC)))
ipums.60.1 <- cbind(ipums.60.1,dummify(as.factor(ipums.60.1$OCC)))
library(weights)
ipums.50 <- cbind(ipums.50,dummify(as.factor(ipums.50$OCC)))
ipums.50.1 <- cbind(ipums.50.1,dummify(as.factor(ipums.50.2$OCC)))
ipums.60.1 <- cbind(ipums.60.1,dummify(as.factor(ipums.60.1$OCC)))
tableContinuous(vars =ipums.50[c("age", "realprop","5","22","39","41","49","54","97","136","157","203","266","310")], prec = 3,stats=my.stats, lab = "census-sum")
library(xtable)
tableContinuous(vars =ipums.50[c("age", "realprop","5","22","39","41","49","54","97","136","157","203","266","310")], prec = 3,stats=my.stats, lab = "census-sum")
??tableContinuous
library(reporttools)
tableContinuous(vars =ipums.50[c("age", "realprop","5","22","39","41","49","54","97","136","157","203","266","310")], prec = 3,stats=my.stats, lab = "census-sum")
View(ipums.50)
ipums.50 <- cbind(ipums.50,dummify(as.factor(ipums.50$occ)))
my.stats <- list("n", "min", "mean", "max", "s") # create table
tableContinuous(vars =ipums.50[c("age", "realprop","5","22","39","41","49","54","97","136","157","203","266","310")], prec = 3,stats=my.stats, lab = "census-sum")
tableContinuous(vars =ipums.50[c("age", "realprop","5","22","39","41","49","54","97","136","157","203","266","310")], prec = 3,stats=my.stats, lab = "census-sum")
my.stats <- list("min", "mean", "max", "s") # create table
tableContinuous(vars =ipums.50[c("age", "realprop","5","22","39","41","49","54","97","136","157","203","266","310")], prec = 3,stats=my.stats, lab = "census-sum")
ipums.50.1 <- cbind(ipums.50.1,dummify(as.factor(ipums.50.2$occ1880)))
ipums.60.1 <- cbind(ipums.60.1,dummify(as.factor(ipums.60.1$occ1880)))
ipums.50.1 <- cbind(ipums.50.1,dummify(as.factor(ipums.50.1$occ1880)))
View(ipums.50.1)
ipums.1850.1
ipums.50.1$occ1880
count(ipums.50$occ)
tableContinuous(vars =ipums.50[c("age", "realprop","5","22","39","41","48","49","54","65","97","110","136","142","154","157","159","188","197","200","203","205","252","266","310")], prec = 3,stats=my.stats, lab = "census-sum")
tableContinuous(vars =ipums.50[c("slaveholder","n.slaves")], prec = 3,stats=my.stats, lab = "census-sum")
tableContinuous(vars =ipums.50.1[c("slaveholder","n.slaves")], prec = 3,stats=my.stats, lab = "census-sum")
tableContinuous(vars =ipums.60.1[c("slaveholder","n.slaves")], prec = 3,stats=my.stats, lab = "census-sum")
count(ipums.50.1)
summary(ipums.60.1)
View(ipums.50)
View(ipums.50)
colnames(ipums.50)
colnames(ipums.50.1)
tableContinuous(vars =ipums.50.1[c("slaveholder","n.slaves")], weights=perwt,prec = 3,stats=my.stats, lab = "census-sum")
tableContinuous(vars =ipums.50.1[c("slaveholder","n.slaves",perwt)], weights=perwt,prec = 3,stats=my.stats, lab = "census-sum")
ipums.50.1$perwt
tableContinuous(vars =ipums.50.1[c("slaveholder","n.slaves","perwt")], weights=perwt,prec = 3,stats=my.stats, lab = "census-sum")
tableContinuous(vars =ipums.50.1[c("slaveholder","n.slaves")], weights=ipums.50.1$perwt,prec = 3,stats=my.stats, lab = "census-sum")
?summarize
?summary
4.1 * nrow(ipums.50)
0.041 * nrow(ipums.50))
0.041 * nrow(ipums.50)
ipums.60.1$persprop
summary(ipums.60.1$persprop)
sum((ipums.60.1$realprop + ipums.60.1$persprop) >= 20000) /nrow(ipums.60.1) # combi
sum((ipums.60.1$realprop + ipums.60.1$persprop) >= 20000)
nrow(ipums.50)
ipums.50 <- read.csv(paste0(data.directory,"ipums-1850-sample.csv"),header=TRUE, sep = ",")
1/20
